{"version":3,"file":"static/js/890.7743e592.chunk.js","mappings":"yMAYaA,EAAMC,EAAAA,GAAAA,IAAH,yEACZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,wJCZSC,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAA6BC,EAAAA,EAAAA,KAArBC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WAEfC,EAAAA,EAAAA,YAAU,WACK,KAATX,GAAyB,KAAVE,GAA6B,KAAbE,GAI/BK,GAASC,GACXE,EAAAA,GAAAA,MAAY,uDAGf,GAAE,CAACZ,EAAME,EAAOO,EAAOL,EAAUM,IAClC,IAYMG,EAAyB,SAAAC,GAC7B,MAAwBA,EAAMC,OAAtBf,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,MACd,OAAQhB,GACN,IAAK,OACHC,EAAQe,GACR,MAEF,IAAK,QACHb,EAASa,GACT,MAEF,IAAK,WACHX,EAAYW,GACZ,MAEF,QACE,OAEL,EAEKC,EAA2B,KAATjB,GAAyB,KAAVE,GAA6B,KAAbE,EAEvD,OACE,6BACE,SAACf,EAAA,EAAD,CAAK6B,EAAG,CAAC,GAAIC,GAAG,MAAhB,UACE,kBAAMC,SArCgB,SAAAN,GAC1BA,EAAMO,iBAENf,GACEgB,EAAAA,EAAAA,IAAc,CACZtB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,IAGL,EA2BK,WACE,mBAAOmB,QAAQ,SAAf,sBAEE,kBACEC,GAAG,SACHC,KAAK,OACLzB,KAAK,OACLgB,MAAOhB,EACP0B,UAAQ,EACRC,YAAY,IACZC,SAAUf,QAId,mBAAOU,QAAQ,UAAf,mBAEE,kBACEC,GAAG,UACHC,KAAK,QACLzB,KAAK,QACLgB,MAAOd,EACPwB,UAAQ,EACRC,YAAY,IACZC,SAAUf,QAId,mBAAOU,QAAQ,aAAf,sBAEE,kBACEC,GAAG,aACHC,KAAK,WACLzB,KAAK,WACLgB,MAAOZ,EACPsB,UAAQ,EACRC,YAAY,IACZC,SAAUf,QAId,mBAAQY,KAAK,SAASI,SAAUZ,GAAmBP,EAAnD,SACGA,EAAY,QAAU,wBAI7B,SAAC,KAAD,MAGL,ECvGD,EAJsB,WACpB,OAAO,SAACZ,EAAD,GACR,C","sources":["components/Box.jsx","components/RegisterForm/RegisterForm.jsx","pages/Authorization.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport {\n  position,\n  color,\n  space,\n  layout,\n  flexbox,\n  border,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled.div`\n  ${position}\n  ${color}\n  ${space}\n  ${layout}\n  ${flexbox} \n  ${border}\n  ${shadow}\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { authorization } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\nimport { Box } from 'components/Box';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const { error, isLoading } = useAuth();\n\n  useEffect(() => {\n    if (name === '' && email === '' && password === '') {\n      return;\n    }\n\n    if (error && isLoading) {\n      toast.error('You entered incorrect data. Try entering other data.');\n      return;\n    }\n  }, [name, email, error, password, isLoading]);\n  const handleAuthorization = event => {\n    event.preventDefault();\n\n    dispatch(\n      authorization({\n        name,\n        email,\n        password,\n      })\n    );\n  };\n\n  const handleChangeInputValue = event => {\n    const { name, value } = event.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const clearInputValue = name === '' || email === '' || password === '';\n\n  return (\n    <main>\n      <Box p={[4]} as=\"div\">\n        <form onSubmit={handleAuthorization}>\n          <label htmlFor=\"nameId\">\n            Username\n            <input\n              id=\"nameId\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              required\n              placeholder=\" \"\n              onChange={handleChangeInputValue}\n            />\n          </label>\n\n          <label htmlFor=\"emailId\">\n            Email\n            <input\n              id=\"emailId\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              required\n              placeholder=\" \"\n              onChange={handleChangeInputValue}\n            />\n          </label>\n\n          <label htmlFor=\"passwordId\">\n            Password\n            <input\n              id=\"passwordId\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              required\n              placeholder=\" \"\n              onChange={handleChangeInputValue}\n            />\n          </label>\n\n          <button type=\"submit\" disabled={clearInputValue || isLoading}>\n            {isLoading ? '00000' : 'Authorization'}\n          </button>\n        </form>\n      </Box>\n      <Toaster />\n    </main>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm';\n\nconst Authorization = () => {\n  return <RegisterForm />;\n};\n\nexport default Authorization;\n"],"names":["Box","styled","position","color","space","layout","flexbox","border","shadow","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","useAuth","error","isLoading","useEffect","toast","handleChangeInputValue","event","target","value","clearInputValue","p","as","onSubmit","preventDefault","authorization","htmlFor","id","type","required","placeholder","onChange","disabled"],"sourceRoot":""}